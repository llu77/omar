rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow user to create their own document
      allow create: if isAuthenticated() && isOwner(userId);
      
      // Allow user to read and update their own document
      allow read, update: if isAuthenticated() && isOwner(userId);
      
      // Nobody can delete user documents for data integrity
      allow delete: if false;
    }

    // Rules for the 'reports' collection
    match /reports/{reportId} {
      // A user can create a report if they are logged in and the report's userId matches their own.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);

      // A user can read, update a report if they are logged in and they are the owner.
      allow read, update: if isAuthenticated() && isOwner(resource.data.userId);

      // Nobody can delete reports to prevent data loss.
      // You might want to implement a soft-delete feature instead.
      allow delete: if false;
    }
  }
}
